@http_base_url = http://localhost:8000
@theme = "Seagulls"
@ollama_model = "phi3:mini"

### Ollama
POST http://localhost:11434/api/generate
Accept: application/json
Content-Type: application/json

{
    "model": "{{ollama_model}}",
    "prompt": "Make up a little story about ",
    "format": "json",
    "stream": false,
    "system": "You are a creative story writer that creates engaging choose-your-own-adventure stories.Generate a complete branching story with multiple paths and endings in the JSON format I'll specify.The story should have:1. A compelling title2. A starting situation (root node) with 2-3 options3. Each option should lead to another node with its own options4. Some paths should lead to endings (both winning and losing)5. At least one path should lead to a winning endingStory structure requirements:- Each node should have 2-3 options except for ending nodes- The story should be 3-4 levels deep (including root node)- Add variety in the path lengths (some end earlier, some later)- Make sure there's at least one winning pathOutput your story in this exact JSON structure:{    \"\"title\"\":\"\"story title\"\",    \"\"rootNode\"\": {    \"\"content\"\": \"\"The starting situation of the story\"\",    \"\"isEnding\"\": false,    \"\"isWinningEnding\"\": false,    \"\"options\"\": [        {            \"\"text\"\": \"\"Option 1 text\"\",            \"\"nextNode\"\": {                \"\"content\"\": \"\"What happens for option 1\"\",                \"\"isEnding\"\": false,                \"\"isWinningEnding\"\": false,                \"\"options\"\": []            }        }    ]    }}Don't simplify or omit any part of the story structure.Don't add any text outside of the JSON structure."
}

###

### Test
POST {{http_base_url}}/story/volcano
Accept: application/json
Content-Type: application/json

###

### Create Story
POST {{http_base_url}}/story
Accept: application/json
Content-Type: application/json

{
    "theme": "Seagulls"
}

###

### Get story
@storyId = 2

GET {{http_base_url}}/story/{{storyId}}
Accept: application/json


###